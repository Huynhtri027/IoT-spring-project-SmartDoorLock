<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="mapper.com.sl.web.doorlock">
	<select id="doorlockList" resultType="WebDoorlockVO"
		parameterType="WebDoorlockVO">
		SELECT
			K.SERIAL_NO as serial_no,
			K.KEY_NAME as key_name,
			K.GRADE as grade,
			(SELECT B.CODE_NAME FROM CODE_DET B WHERE B.G_CODE='KEY_GRADE' AND B.USE_YN='예' AND B.CODE = K.GRADE) as grade_name,
			D.DOORLOCK_NAME as doorlock_name,
      		M.EMAIL as email,
			D.INSTALLED_PLACE as installed_place
		FROM
			KEY_MST K, DOORLOCK_DET D, MEMBER_MST M
		WHERE
	      K.SERIAL_NO = D.SERIAL_NO
	    AND
	      D.MEMBER_ID = M.MEMBER_ID
	    AND
			K.GRADE != 'MEMBER'
		AND
			(K.STATE = 'ACTIVE' OR K.STATE = 'INACTIVE')
		AND
			K.MEMBER_ID = #{member_id,jdbcType=INTEGER}
		AND
			K.EMAIL = #{email,jdbcType=VARCHAR}
	</select>
	
	<select id="doorlockDetail" resultType="WebDoorlockVO" parameterType="WebDoorlockVO">
		SELECT
			K.SERIAL_NO as serial_no,
			K.KEY_NAME as key_name,
			K.EMAIL as email,
			D.CRT_DT as crt_dt,
			D.DOORLOCK_NAME as doorlock_name,
			D.INSTALLED_PLACE as installed_place
		FROM
			KEY_MST K , DOORLOCK_DET D
		WHERE
			K.SERIAL_NO = D.SERIAL_NO
		AND
			K.SERIAL_NO = #{serial_no,jdbcType=VARCHAR}
		AND
			K.GRADE = 'MASTER'			
		AND
			K.START_DATE <![CDATA[ < ]]> SYSDATE
		AND
			K.EXPIRE_DATE <![CDATA[ > ]]> SYSDATE
		AND
			(K.STATE = 'ACTIVE' OR K.STATE = 'INACTIVE')
	</select>
	
	
	<!--  -->
	<select id="doorlockCreateCheck" resultType="Integer" parameterType="WebDoorlockVO">
		SELECT
			count(*)
		FROM
			DOORLOCK_MST A
		WHERE
			1=1
		AND 
			A.SERIAL_NO=#{serial_no,jdbcType=VARCHAR}
		AND
			A.REGISTERED='0'
	</select>
	
	<select id="doorlockCreate_0" resultType="Integer" parameterType="WebDoorlockVO">
		
		SELECT 
			count(*) as count
		FROM 
			KEY_MST 
		where 
			SERIAL_NO = #{serial_no, jdbcType=VARCHAR}
		and
			MEMBER_ID = #{member_id, jdbcType=INTEGER}
			 
	</select>
	
	<!-- transaction queries -->
	<!-- 도어락 마스터 테이블에서 제품키에 대한 등록여부에 '등록'을 등록해준다. -->
	<update id="doorlockCreate_1" parameterType="WebDoorlockVO">
		UPDATE
			DOORLOCK_MST A
		SET
			A.REGISTERED = 1
		WHERE
			1=1
		AND
			A.SERIAL_NO=#{serial_no,jdbcType=VARCHAR}
	</update>
	
	<!-- 도어락 마스터 테이블에서 등록된 제품과 제품키와 맞는 제품번호 그리고 제품 타입 등록 여부를 가져온다. -->
	<select id="doorlockCreate_2" resultType="WebDoorlockVO" parameterType="WebDoorlockVO">
		SELECT
			A.SERIAL_NO as serial_no,
			A.TYPE as type,
			A.REGISTERED as registered
		FROM
			DOORLOCK_MST A
		WHERE
			1=1
		AND
			A.SERIAL_NO=#{serial_no,jdbcType=VARCHAR}
		AND
			A.REGISTERED=1
	</select>
		
	<!-- 		도어락 det 에다가 내용을 작성할때 정렬의 순서를 알기위해 select count(*)를 사용 	 -->
	<select id="doorlockCreate_3" resultType="Integer" parameterType="WebDoorlockVO">
		SELECT
			MAX(A.SORT)+1 
		FROM
			DOORLOCK_DET A
		WHERE
			1=1
		AND 
			A.MEMBER_ID = #{member_id, jdbcType=INTEGER}
	</select>
	
	<!-- 도어락 det작성에 필요한 내용을 모았으면 바로 삽입  -->
	<insert id="doorlockCreate_4" parameterType="WebDoorlockVO">
		INSERT INTO
			DOORLOCK_DET
		VALUES(
			#{serial_no,jdbcType=VARCHAR},
			#{member_id,jdbcType=INTEGER},
			#{doorlock_name,jdbcType=VARCHAR},
			#{installed_place,jdbcType=VARCHAR},
			#{sort,jdbcType=INTEGER},
			'REGISTERED',
			SYSDATE,
			#{email,jdbcType=VARCHAR},
			SYSDATE,
			#{email,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 도어락 det를 작성했으니 작성한 사람은 마스터키를 받아야 한다. 이 때, 마스터 키에 대한 sort 내용을 다시 정의해줄 필요가 있다. -->
	<select id="doorlockCreate_5" resultType="Integer" parameterType="WebDoorlockVO">
	SELECT
		MAX(A.SORT)+1
	FROM
		KEY_MST A
	WHERE
		1=1
	AND 
		A.MEMBER_ID = #{member_id, jdbcType=INTEGER}
	</select>
	<!-- 도어락 det를 작성했으니 작성한 사람은 마스터키를 받아야 한다. 이 때, 마스터 키에 대한 sort 내용을 다시 정의해줄 필요가 있다. -->
	<select id="doorlockCreate_6" resultType="Integer" parameterType="WebDoorlockVO">
	SELECT
		count(*)
	FROM
		KEY_MST A
	WHERE
		1=1
	AND 
		A.KEY_ID = #{key_id, jdbcType=INTEGER}
	</select>
	
	<!-- 마스터 키의 이름 기본값은 doorlock name 을 따르도록 한다. -->
	<insert id="doorlockCreate_7" parameterType="WebDoorlockVO">
		INSERT INTO
			KEY_MST
		VALUES(
			#{key_id,jdbcType=VARCHAR},
			#{member_id,jdbcType=INTEGER},
			#{serial_no,jdbcType=VARCHAR},
			#{doorlock_name,jdbcType=VARCHAR},
			'MASTER',
			SYSDATE,
			TO_DATE('2999-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
			#{sort,jdbcType=INTEGER},
			'ACTIVE',
			SYSDATE,
			#{email,jdbcType=VARCHAR},
			SYSDATE,
			#{email,jdbcType=VARCHAR},
			#{email,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 모든열쇠에는 기본적인 사용 가능 기간이 들어가야하고 처음부터 끝까지 사용할 수 있도록 default의 값을 삽입해 준다. -->
	<insert id="doorlockCreate_8" parameterType="WebDoorlockVO">
		INSERT INTO
			KEY_VAL_TIME
		VALUES(
			#{key_id,jdbcType=VARCHAR},
			KEY_VAL_TIME_SEQ.NEXTVAL,
			#{member_id,jdbcType=INTEGER},
			000000,
			235959,
			'일,월,화,수,목,금,토',
			SYSDATE,
			#{email,jdbcType=VARCHAR},
			SYSDATE,
			#{email,jdbcType=VARCHAR}
		)
	</insert>

	<select id="doorlockCreate_9" resultType="WebDoorlockVO" parameterType="WebDoorlockVO">
		SELECT
			A.SERIAL_NO as serial_no,
			A.MEMBER_ID as member_id,
			A.DOORLOCK_NAME as doorlock_name,
			A.INSTALLED_PLACE as installed_place,
			A.SORT as sort,
			A.STATE as state,
			(SELECT B.CODE_NAME FROM CODE_DET B WHERE B.G_CODE='DOORLOCK_STATE' AND B.USE_YN='예' AND B.CODE = A.STATE) as state_name,
			A.CRT_DT as crt_dt,
			A.CRT_EMAIL as crt_email,
			A.UPDT_DT as updt_dt,
			A.UPDT_EMAIL as updt_email
		FROM
			DOORLOCK_DET A
		WHERE
			1=1
		AND
			A.SERIAL_NO = #{serial_no, jdbcType=VARCHAR}
		AND
			A.MEMBER_ID = #{member_id, jdbcType=INTEGER}
	</select>
	<!-- 도어락 삽입 작업 끝. -->
		
		


	<!-- 도어락을 삭제합니다. -->
	<select id="deleteDoorlock1" parameterType="WebDoorlockVO"
		resultType="Integer">
		SELECT
			count(*) as count
		FROM
			KEY_MST A
		WHERE
			A.SERIAL_NO=#{serial_no, jdbcType=VARCHAR}
		AND
			A.GRADE!='MASTER'
	</select>

	<delete id="deleteDoorlock2" parameterType="WebDoorlockVO">
		DELETE FROM
			KEY_MST A
		WHERE
			A.SERIAL_NO = #{serial_no,jdbcType=VARCHAR}
		AND
			A.MEMBER_ID = #{member_id,jdbcType=INTEGER}
		AND
			A.EMAIL = #{email,jdbcType=VARCHAR}
		AND
			A.GRADE = 'MASTER'
	</delete>
	<delete id="deleteDoorlock3" parameterType="WebDoorlockVO">
		DELETE FROM
			DOORLOCK_DET A
		WHERE
			A.SERIAL_NO = #{serial_no,jdbcType=VARCHAR}
		AND
			A.MEMBER_ID = #{member_id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteDoorlock4" parameterType="WebDoorlockVO">
		UPDATE
			DOORLOCK_MST A
		SET
			A.REGISTERED=0
		WHERE
			A.SERIAL_NO = #{serial_no,jdbcType=VARCHAR}
	</delete>

	<!-- 도어락 삭제 완료 -->
		
			
	<update id="updateDoorlock" parameterType="WebDoorlockVO">
		UPDATE
			DOORLOCK_DET A
		SET
			A.DOORLOCK_NAME = #{doorlock_name,jdbcType=VARCHAR},
			A.INSTALLED_PLACE = #{installed_place,jdbcType=VARCHAR}
		WHERE
			A.SERIAL_NO = #{serial_no,jdbcType=VARCHAR}
		AND
			A.MEMBER_ID = #{member_id,jdbcType=INTEGER}
	</update>
	
	<!-- GCM을 보내기 위해 RegID를 찾는다.  -->
	<select id="getRegId" parameterType="AppMyDoorLockVO" resultType="String">
		SELECT
			REG_ID
		FROM
			GCM_NOTI
		WHERE
			EMAIL = #{member_email,jdbcType=VARCHAR}
		AND
			AUTO_FLAG = 1
	</select>
	
	
	<!-- 삭제할때 로그를 쏘기 위해 만들어놓은 임시 쿼리. -->
	<select id="getEmailList" parameterType="String" resultType="String">
		SELECT
			A.EMAIL as email
		FROM
			KEY_MST A
		WHERE
			A.SERIAL_NO = #{serial_no,jdbcType=VARCHAR}	
	</select>
	<select id="selectListDoorlocklogs" parameterType="SystemLogSetterVO" resultType="SystemLogSetterVO">
		SELECT
			A.SERIAL_NO as serial_no,
			A.SEND_EMAIL as send_email,
			A.RECV_EMAIL as recv_email,
			A.STATE as state,
			A.MESSAGE as message,
			A.LOG_DATE as log_date,
			A.IDX as idx
		FROM
			LOG_DOORLOCK A
		WHERE
			A.SERIAL_NO = #{serial_no,jdbcType=VARCHAR}
		ORDER BY
			LOG_DATE DESC
	</select>

</mapper>